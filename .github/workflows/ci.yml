name: CI
on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main
jobs:
  Version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install --with dev
      - name: Gather PR version
        run: |
          export PULL_REQUEST_VERSION=$(poetry version --short)
          echo "PULL_REQUEST_VERSION=${PULL_REQUEST_VERSION}"

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Gather main version
        run: |
          export BASE_VERSION=$(poetry version --short)
          echo "BASE_VERSION=${BASE_VERSION}"

      - name: Compare versions
        run: |
          export COMPARE_CODE=$(cmp-version $PULL_REQUEST_VERSION $BASE_VERSION) && echo "COMPARE_CODE=$COMPARE_CODE"

          if [ "$COMPARE_CODE" == "1" ]; then
            echo "Version upgrading to $PULL_REQUEST_VERSION"
          else
            echo "ðŸ›‘ Version $PULL_REQUEST_VERSION not greater than $BASE_VERSION"
            echo "ðŸš§ Update version through pyproject.toml or 'poetry version' command e.g."
            echo "$ poetry version major"
            echo "$ poetry version minor"
            echo "$ poetry version patch"
            echo "$ poetry version preminor"
            echo "For more examples: https://python-poetry.org/docs/cli/#version"
            exit 1
          fi
  Lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install --with dev

      - name: Run pre-commit
        run: |
          poetry run pre-commit run --all-files
  Tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install --with dev

      - name: Run tests with coverage
        run: |
          poetry run pytest --cov=./

      - name: Upload coverage file
        uses: actions/upload-artifact@v4
        with:
          name: coverage-data
          path: .coverage
          include-hidden-files: true
          if-no-files-found: ignore

  Coverage:
      name: Combine & check coverage
      if: always()
      needs: Tests
      runs-on: ubuntu-latest

      steps:
        - uses: actions/checkout@v4
        - uses: actions/setup-python@v5
          with:
            python-version: "3.9"

        - uses: actions/download-artifact@v4
          with:
            pattern: coverage-data

        - name: Combine coverage & fail if it's <90%
          run: |
            python -m pip install --upgrade pip
            pip install --upgrade coverage[toml]
            mv ./coverage-data/.coverage .coverage

            coverage html --skip-covered --skip-empty

            coverage report --format=markdown >> $GITHUB_STEP_SUMMARY

            coverage report --fail-under=90

        - name: Upload HTML report if check failed
          uses: actions/upload-artifact@v4
          with:
            name: html-report
            path: htmlcov
          if: ${{ failure() }}
